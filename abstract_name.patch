diff --git a/proofs/pfedit.ml b/proofs/pfedit.ml
index 6466bb8..fff1a12 100644
--- a/proofs/pfedit.ml
+++ b/proofs/pfedit.ml
@@ -150,8 +150,7 @@ open Decl_kinds

 let next = let n = ref 0 in fun () -> incr n; !n

-let build_constant_by_tactic sign typ tac =
-  let id = id_of_string ("temporary_proof"^string_of_int (next())) in
+let build_constant_by_tactic id sign typ tac =
   start_proof id (Global,Proof Theorem) sign typ (fun _ _ -> ());
   try
     by tac;
@@ -163,5 +162,6 @@ let build_constant_by_tactic sign typ tac =
     raise e

 let build_by_tactic typ tac =
+  let id = id_of_string ("temporary_proof"^string_of_int (next())) in
   let sign = Decls.clear_proofs (Global.named_context ()) in
-  (build_constant_by_tactic sign typ tac).const_entry_body
+  (build_constant_by_tactic id sign typ tac).const_entry_body
diff --git a/proofs/pfedit.mli b/proofs/pfedit.mli
index dde52d0..c16445b 100644
--- a/proofs/pfedit.mli
+++ b/proofs/pfedit.mli
@@ -180,6 +180,6 @@ val instantiate_nth_evar_com : int -> Topconstr.constr_expr -> unit

 (** [build_by_tactic typ tac] returns a term of type [typ] by calling [tac] *)

-val build_constant_by_tactic : named_context_val -> types -> tactic ->
+val build_constant_by_tactic : identifier -> named_context_val -> types -> tactic ->
   Entries.definition_entry
 val build_by_tactic : types -> tactic -> constr
diff --git a/tactics/tactics.ml b/tactics/tactics.ml
index ab04eba..a3be041 100644
--- a/tactics/tactics.ml
+++ b/tactics/tactics.ml
@@ -3385,7 +3385,7 @@ let abstract_subproof id tac gl =
     try flush_and_check_evars (project gl) concl
     with Uninstantiated_evar _ ->
       error "\"abstract\" cannot handle existentials." in
-  let const = Pfedit.build_constant_by_tactic secsign concl
+  let const = Pfedit.build_constant_by_tactic id secsign concl
     (tclCOMPLETE (tclTHEN (tclDO (List.length sign) intro) tac)) in
   let cd = Entries.DefinitionEntry const in
   let lem = mkConst (Declare.declare_constant ~internal:Declare.KernelSilent id (cd,IsProof Lemma)) in
